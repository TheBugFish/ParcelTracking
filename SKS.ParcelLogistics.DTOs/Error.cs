/*
 * Parcel Logistics Service
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.2.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using FluentValidation;
using FluentValidation.Attributes;

namespace SKS.ParcelLogistics.WebService.DTOs
{

    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    [Validator(typeof(ErrorValidator))]
    public partial class Error : IEquatable<Error>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="Error" /> class.
        /// </summary>
        /// <param name="ErrorMessage">The error message. (required).</param>
        public Error(string ErrorMessage = default(string))
        {
            this.ErrorMessage = ErrorMessage;
        }

        /// <summary>
        /// The error message.
        /// </summary>
        /// <value>The error message.</value>
        [DataMember(Name = "errorMessage")]
        public string ErrorMessage { get; set; }


        /// <summary>
        /// Returns true if Error instances are equal
        /// </summary>
        /// <param name="other">Instance of Error to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Error other)
        {

            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return
                (
                    this.ErrorMessage == other.ErrorMessage ||
                    this.ErrorMessage != null &&
                    this.ErrorMessage.Equals(other.ErrorMessage)
                );
        }
    }

    public class ErrorValidator : AbstractValidator<Error>
    {
        public ErrorValidator()
        {
            RuleFor(x => x.ErrorMessage).NotNull();
        }
    }
}
